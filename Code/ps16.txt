['Muhammad Waqas', 'Marciana Davis', 'Khamraj Rohit', 'Brayden Sorenson']
Ex.1: 
fun zip xs ys =
    case (xs,ys) of
    	([],[]) => []
      | (x::xs', y::ys') => (x,y) :: (zip xs' ys')
      | _ => []
 
(* -------------------------------------------------------------------- *)
(*
 * 6. Use zip to create a list of tuples for stocks with less than 20 shares
 *)
fun symbols_and_values2 investments = 
	let 
		val tmp = less_than_20 investments 
	in
		zip(symbol)
 
Ex.2:
fun total_value2 investments = 
 fold (fn(x,i)) => x +(valueOf i)) 0 (less_than_20 investments))

val ans8 =total_value2 investments

Ex.3:

fun f(toPrepend xs)=
case xs of
	[] => 0
	| first::rest => (toPrepend,first)::f(test)

val test = f([10,20,30,40,50])
val test = [([1,2,3],10),([1,2,3],20),([1,2,3],30),([1,2,3],40),([1,2,3],50)]
                                                                                                   